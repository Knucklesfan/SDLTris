#pragma once
class ghostblock
{
public:
    ghostblock();
    void rebirth(int xspawn, int yspawn, int block, int(barray)[240]);
    void changePos(int ax, int ay, int arot);
    bool collides(int colx, int coly, int colrot);
    void draw();
    int x, y, lastx, lasty, rot, lastrot, width, height, piece;
    int* array;
    int* outsidearray;
    bool alive;
    int Pieces[7][4][16] = {
        //S PIECE 
        {
        {0,1,1,0,
         0,0,1,1,
         0,0,0,0,
         0,0,0,0
        },
        {0,0,1,0,
         0,1,1,0,
         0,1,0,0,
         0,0,0,0
        },
        {0,0,0,1,
         0,0,1,1,
         0,0,1,0,
         0,0,0,0
        },
        {0,0,0,0,
         0,1,1,0,
         0,0,1,1,
         0,0,0,0
        }
    },
        //T PIECE
        {
        {
         0,0,2,0,
         0,2,2,0,
         0,0,2,0,
         0,0,0,0
        },
        {
         0,0,2,0,
         0,2,2,2,
         0,0,0,0,
         0,0,0,0
        },
        {
         0,0,2,0,
         0,0,2,2,
         0,0,2,0,
         0,0,0,0
        },
        {
         0,0,0,0,
         0,2,2,2,
         0,0,2,0,
         0,0,0,0
        },

        },
        //B PIECE
        {
        {
         0,0,3,0,
         0,0,3,3,
         0,0,0,3,
         0,0,0,0
        },
        {
         0,0,3,3,
         0,3,3,0,
         0,0,0,0,
         0,0,0,0
        },
        {
         0,0,3,0,
         0,0,3,3,
         0,0,0,3,
         0,0,0,0
        },
        {
         0,0,0,0,
         0,0,3,3,
         0,3,3,0,
         0,0,0,0
        },

        },
        //C PIECE
        {
        {
         0,0,1,1,
         0,0,1,1,
         0,0,0,0,
         0,0,0,0
        },
        {
         0,0,1,1,
         0,0,1,1,
         0,0,0,0,
         0,0,0,0
        },
        {
         0,0,1,1,
         0,0,1,1,
         0,0,0,0,
         0,0,0,0
        },
        {
         0,0,1,1,
         0,0,1,1,
         0,0,0,0,
         0,0,0,0
        },

        },
        //L PIECE
        {
        {
         0,0,0,0,
         0,2,2,2,
         0,2,0,0,
         0,0,0,0
        },
        {
         0,2,2,0,
         0,0,2,0,
         0,0,2,0,
         0,0,0,0
        },
        {
         0,0,0,2,
         0,2,2,2,
         0,0,0,0,
         0,0,0,0
        },
        {
         0,0,2,0,
         0,0,2,0,
         0,0,2,2,
         0,0,0,0
        },

        },
        //P PIECE
        {
        {
         0,3,0,0,
         0,3,3,3,
         0,0,0,0,
         0,0,0,0
        },
        {
         0,0,3,3,
         0,0,3,0,
         0,0,3,0,
         0,0,0,0
        },
        {
         0,3,3,3,
         0,0,0,3,
         0,0,0,0,
         0,0,0,0
        },
        {
         0,0,3,0,
         0,0,3,0,
         0,3,3,0,
         0,0,0,0
        },

        },
        //R PIECE
        {
        {
         0,0,0,0,
         1,1,1,1,
         0,0,0,0,
         0,0,0,0
        },
        {
         0,0,1,0,
         0,0,1,0,
         0,0,1,0,
         0,0,1,0
        },
        {
         0,0,0,0,
         0,0,0,0,
         1,1,1,1,
         0,0,0,0
        },
        {
         0,1,0,0,
         0,1,0,0,
         0,1,0,0,
         0,1,0,0
        }

        }
    };
    ghostblock(int, int, int(barray)[], int bwidth, int bheight, int block, int(outsidearray)[]);

private:
    void removeolddraw();
    void redraw();

};

