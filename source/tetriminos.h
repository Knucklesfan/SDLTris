#pragma once

class tetrimino {

    public:
        int Pieces[7][4][16] = {
            //S PIECE 
            {
            {0,1,1,0,
             0,0,1,1,
             0,0,0,0,
             0,0,0,0
            },
            {0,0,1,0,
             0,1,1,0,
             0,1,0,0,
             0,0,0,0
            },
            {0,0,0,1,
             0,0,1,1,
             0,0,1,0,
             0,0,0,0
            },
            {0,0,0,0,
             0,1,1,0,
             0,0,1,1,
             0,0,0,0
            }
        },
            //T PIECE
            {
            {
             0,0,2,0,
             0,2,2,0,
             0,0,2,0,
             0,0,0,0
            },
            {
             0,0,2,0,
             0,2,2,2,
             0,0,0,0,
             0,0,0,0
            },
            {
             0,0,2,0,
             0,0,2,2,
             0,0,2,0,
             0,0,0,0
            },
            {
             0,0,0,0,
             0,2,2,2,
             0,0,2,0,
             0,0,0,0
            },

        },
            //B PIECE
            {
            {
             0,0,3,0,
             0,0,3,3,
             0,0,0,3,
             0,0,0,0
            },
            {
             0,0,3,3,
             0,3,3,0,
             0,0,0,0,
             0,0,0,0
            },
            {
             0,0,3,0,
             0,0,3,3,
             0,0,0,3,
             0,0,0,0
            },
            {
             0,0,0,0,
             0,0,3,3,
             0,3,3,0,
             0,0,0,0
            },

        },
            //C PIECE
            {
            {
             0,0,1,1,
             0,0,1,1,
             0,0,0,0,
             0,0,0,0
            },
            {
             0,0,1,1,
             0,0,1,1,
             0,0,0,0,
             0,0,0,0
            },
            {
             0,0,1,1,
             0,0,1,1,
             0,0,0,0,
             0,0,0,0
            },
            {
             0,0,1,1,
             0,0,1,1,
             0,0,0,0,
             0,0,0,0
            },

        },
            //L PIECE
            {
            {
             0,0,0,0,
             0,2,2,2,
             0,2,0,0,
             0,0,0,0
            },
            {
             0,2,2,0,
             0,0,2,0,
             0,0,2,0,
             0,0,0,0
            },
            {
             0,0,0,2,
             0,2,2,2,
             0,0,0,0,
             0,0,0,0
            },
            {
             0,0,2,0,
             0,0,2,0,
             0,0,2,2,
             0,0,0,0
            },

        },
            //P PIECE
            {
            {
             0,3,0,0,
             0,3,3,3,
             0,0,0,0,
             0,0,0,0
            },
            {
             0,0,3,3,
             0,0,3,0,
             0,0,3,0,
             0,0,0,0
            },
            {
             0,3,3,3,
             0,0,0,3,
             0,0,0,0,
             0,0,0,0
            },
            {
             0,0,3,0,
             0,0,3,0,
             0,3,3,0,
             0,0,0,0
            },

        },
            //R PIECE
            {
            {
             0,0,0,0,
             1,1,1,1,
             0,0,0,0,
             0,0,0,0
            },
            {
             0,0,1,0,
             0,0,1,0,
             0,0,1,0,
             0,0,1,0
            },
            {
             0,0,0,0,
             0,0,0,0,
             1,1,1,1,
             0,0,0,0
            },
            {
             0,1,0,0,
             0,1,0,0,
             0,1,0,0,
             0,1,0,0
            },

        }
        };
        int x, y, lastx, lasty, rot, lastrot, width, height, piece;
        int* array;
        bool alive;

        //bool alive;
	    //int x,y,lastx,lasty,rot,lastrot,width,height;
        //int* array;
        tetrimino();
        tetrimino(int, int, int (barray)[], int bwidth, int bheight, int block);
        bool rebirth(int, int, int block);
        void forcedrop();
	    void movedown();
        void moveleft();
	    void moveright();
        void rotate();
        void draw();
        bool collides(int x, int y, int rot);
        int* getPieces();
        void removeolddraw();
    private:
        void redraw();
};
